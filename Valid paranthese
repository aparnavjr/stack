public class Solution {
    public bool IsValid(string s) {
        
        if(String.IsNullOrEmpty(s) || s == null)
            return false;
            
        Stack<char> st = new Stack<char>();
        
        int len = s.Length;
        
        int i =0;
        
        while(i < len)
        {
            
            if(s[i] == '(' || s[i] == '{' || s[i] == '[' )
            {
                st.Push(s[i]);
            }
            
            else if (s[i] == ')' || s[i] == '}' || s[i] == ']')
            {
                
                if(st.Count == 0)
                    return false;
                    
                if(!isMatch(st.Pop(),s[i]))
                    return false;
            }
            i++;
        }
        
        if(st.Count != 0)
            return false;
        else
            return true;
        
    }
    
    public static bool isMatch(char top , char curr)
    {
        if(top == '(' && curr ==')')
            return true;
        else if(top == '{' && curr == '}')
            return true;
            
        else if(top == '[' && curr == ']')
            return true;
        else
            return false;
        
    }
}
